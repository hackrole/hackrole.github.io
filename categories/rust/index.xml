<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Hackrole's Blog</title><link>https://hackrole.github.io/categories/rust/</link><description>Recent content in Rust on Hackrole's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2020 &lt;a href="https://www.wangchucheng.com/">C. Wang&lt;/a> and &lt;a href="https://www.ruiqima.com/">R. Ma&lt;/a></copyright><lastBuildDate>Wed, 04 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://hackrole.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>17 rust OOP</title><link>https://hackrole.github.io/posts/learn-rust-17-rust-oop/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://hackrole.github.io/posts/learn-rust-17-rust-oop/</guid><description>rust can bind data with methods rust can use pub/private to abstract inner implement. rust not support exntends. you should consider use combination more. extend has two more usage-point.
reuse pub method from parent-class or ability to rewrite it on willing. Rust use Trait to do this. polymorphism. Parent-Ref can ref any-SubType-instances, and method-call is eval at runtime.in Rust, you may use Generics-Type and Trait-Bounds todo this. \`bounded parametric polymorphism\`. TODOTrait-object used for instances with different types Generic and Trait-Bound can only replace one type.</description></item></channel></rss>