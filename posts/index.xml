<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hackrole's Blog</title><link>https://hackrole.github.io/posts/</link><description>Recent content in Posts on Hackrole's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2020 &lt;a href="https://www.wangchucheng.com/">C. Wang&lt;/a> and &lt;a href="https://www.ruiqima.com/">R. Ma&lt;/a></copyright><lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://hackrole.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>writing hugo blog in org subtree</title><link>https://hackrole.github.io/posts/writing-hugo-blog-in-org-subtree-export/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://hackrole.github.io/posts/writing-hugo-blog-in-org-subtree-export/</guid><description>first heading within the post this post will be exported as content/posts/writing-hugo-blog-in-org-file-export.md its title will be &amp;ldquo;writing Hugo blog in org it will have hugo and org tags and emacs as category the lastmod property in the front-matter is set automatically to the time of export. the menuitem identifier is auto-set the menu item weight and post weight if needed have to be manully specified as show abve. a sub-heading under the heading it&amp;rsquo;s draft state will be marked as true because of #+HUGO_DRAFT: true.</description></item><item><title>writing hugo subtree</title><link>https://hackrole.github.io/posts/subtree-export/</link><pubDate>Wed, 28 Oct 2020 00:20:00 +0800</pubDate><guid>https://hackrole.github.io/posts/subtree-export/</guid><description>first heading within the post this post will be exported as content/posts/writing-hugo-blog-in-org-file-export.md its title will be &amp;ldquo;writing Hugo blog in org it will have hugo and org tags and emacs as category the lastmod property in the front-matter is set automatically to the time of export. the menuitem identifier is auto-set the menu item weight and post weight if needed have to be manully specified as show abve. a sub-heading under the heading it&amp;rsquo;s draft state will be marked as true because of #+HUGO_DRAFT: true.</description></item><item><title>writing Hugo Org</title><link>https://hackrole.github.io/posts/write_hugo_blog_in_org/</link><pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate><guid>https://hackrole.github.io/posts/write_hugo_blog_in_org/</guid><description>first heading within the post this post will be exported as content/posts/writing-hugo-blog-in-org-file-export.md its title will be &amp;ldquo;writing Hugo blog in org it will have hugo and org tags and emacs as category the lastmod property in the front-matter is set automatically to the time of export. the menuitem identifier is auto-set the menu item weight and post weight if needed have to be manully specified as show abve. a sub-heading under the heading it&amp;rsquo;s draft state will be marked as true because of #+HUGO_DRAFT: true.</description></item><item><title>引用循环和内存泄漏</title><link>https://hackrole.github.io/posts/learn-rust/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://hackrole.github.io/posts/learn-rust/</guid><description>/// make a ref-circle, it's possible in rust. /// but rust make sure it safe. use std::rc::Rc; use std::cell::RefCell; use crate::List::{Cons, Nil}; #[derive(Debug)] enum List{ Cons(i32, RefCell&amp;lt;Rc&amp;lt;List&amp;gt;&amp;gt;), Nil } impl List { fn tail(&amp;amp;self) -&amp;gt; Option&amp;lt;&amp;amp;RefCell&amp;lt;Rc&amp;lt;List&amp;gt;&amp;gt;&amp;gt; { match self { Cons(_, item) =&amp;gt; Some(item), Nil =&amp;gt; None, } } } fn main() { let a = Rc::new(Cons(5, RefCell::new(Rc::new(Nil)))); println!(&amp;quot;a initial rc count = {}&amp;quot;, Rc::strong_count(&amp;amp;a)); println!(&amp;quot;a next item = {:?}&amp;quot;, a.tail()); let b = Rc::new(Cons(10, RefCell::new(Rc::clone(&amp;amp;a)))); println!</description></item></channel></rss>